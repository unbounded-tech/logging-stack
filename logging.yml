version: "3.3"

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.2
    environment:
      xpack.graph.enabled: "false"
      xpack.ml.enabled: "false"
      xpack.monitoring.enabled: "false"
      xpack.security.enabled: "false"
      xpack.watcher.enabled: "false"
      LOGSPOUT: "ignore"
      cluster.name: "logging-cluster"
      ES_JAVA_OPTS: "-Xms2g -Xmx2g"
    volumes:
      - es:/usr/share/elasticsearch/data
    networks:
      - logging
    deploy:
      labels:
        - com.df.distribute=true
        - com.df.notify=true
        - com.df.port=80
        - com.df.alertName=memlimit
        - com.df.alertIf=@service_mem_limit:0.85
        - com.df.alertFor=30s
      resources:
        reservations:
          memory: 4G
        limits:
          memory: 5G
      placement:
        constraints: 
          - node.role == worker

  logstash:
    image: docker.elastic.co/logstash/logstash:6.2.2
    networks:
      - logging
    deploy:
      labels:
        - com.df.distribute=true
        - com.df.notify=true
        - com.df.port=80
        - com.df.alertName=memlimit
        - com.df.alertIf=@service_mem_limit:0.8
        - com.df.alertFor=30s
      resources:
        reservations:
          memory: 1G
        limits:
          memory: 2G
      placement:
        constraints: 
          - node.role == worker
    configs:
      - logstash.conf
    environment:
      - LOGSPOUT=ignore
    command: logstash -f /logstash.conf

  kibana:
    image: docker.elastic.co/kibana/kibana:6.2.2
    networks:
      - logging
      - proxy
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - LOGSPOUT=ignore
    deploy:
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.port=5601
        - com.df.serviceDomain=${LOGGING_DOMAIN:-localhost}
        - com.df.usersPassEncrypted=true
        - com.df.usersSecret=admin
        - com.df.alertName=memlimit
        - com.df.alertIf=@service_mem_limit:0.8
        - com.df.alertFor=30s
      resources:
        reservations:
          memory: 600M
        limits:
          memory: 1000M
      placement:
        constraints: 
          - node.role == worker

  logspout:
    image: gliderlabs/logspout:v3.2.4
    networks:
      - logging
    environment:
      - SYSLOG_FORMAT=rfc3164
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: syslog://logstash:51415
    deploy:
      mode: global
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.alertName=memlimit
        - com.df.alertIf=@service_mem_limit:0.8
        - com.df.alertFor=30s
      resources:
        reservations:
          memory: 20M
        limits:
          memory: 30M

networks:
  proxy:
    external: true

  logging:
    external: true

volumes:
  es:
    driver: cloudstor:aws
    external: false

configs:
  logstash.conf:
    external: true
